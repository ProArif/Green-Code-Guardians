library(jsonlite)
load("~/Documents/Green Lab/data/linux-generation-chatgpt.json")
help("install.packages")
install.packages("rjson")
library(rjson)
myData <- fromJSON(file="/data/linux-generation-chatgpt.json")
myData <- fromJSON(file="./data/linux-generation-chatgpt.json")
myData <- fromJSON(file=".\data\linux-generation-chatgpt.json")
myData <- fromJSON(file="data/linux-generation-chatgpt.json")
installed.packages("rjson")
# Read the JSON data from a file
json_data <- fromJSON("linux-generation-chatgpt.json")
# Read the JSON data from a file
json_data <- fromJSON("linux-real-chatgpt.json")
detach("package:rjson", unload = TRUE)
library(jsonlite)
library(dplyr)
# Read the JSON data from a file
json_data <- fromJSON("linux-real-chatgpt.json")
# Read the JSON data from a file
json_data <- fromJSON(file="linux-real-chatgpt.json")
detach("package:jsonlite", unload = TRUE)
library(rjson)
library(dplyr)
# Read the JSON data from a file
json_file <- "linux-real-chatgpt.json"
json_data <- fromJSON(json_file)
# Read the JSON data from a file
json_file <- "linux-generation-chatgpt.json"
json_data <- fromJSON(file = json_file)
library(ggplot2)
# Define the factors
machine <- c('linux', 'm2', 'm1', 'windows')
# Define the factors
prompt_type <- c('generation', 'knowledge', 'real')
# Generalize this to all
load("chatgpt/m2-generation-chatGPT.RData")
sample <- counter_data$sampleGroups[[1]]$samples
colnames(sample) < c("total count", "time", "microwatts")
sample$machine <- "m2"
sample$machine <- as.factor(sample$machine)
unlistSample <- unlist(sample$count, use.names=FALSE)
hist(unlistSample)
# Generalize this to all
load("chatgpt/m2-generation-chatGPT.RData")
setwd("~/Documents/Green Lab/Green-Code-Guardians/data")
# Generalize this to all
load("chatgpt/m2-generation-chatGPT.RData")
sample <- counter_data$sampleGroups[[1]]$samples
colnames(sample) < c("total count", "time", "microwatts")
sample$machine <- "m2"
sample$machine <- as.factor(sample$machine)
unlistSample <- unlist(sample$count, use.names=FALSE)
hist(unlistSample)
# Define a function to remove outliers using the IQR rule
remove_outliers <- function(data) {
data <- data[data != 0.00]
q <- quantile(data)
iqr <- q[4] - q[2]
lower_bound <- q[2] - 1.5 * iqr
upper_bound <- q[4] + 1.5 * iqr
data_filtered <- data[data >= lower_bound & data <= upper_bound]
return(data_filtered)
}
# Remove outliers from the data_list
filtered_data <- remove_outliers(unlistSample)
hist(filtered_data)
# qqplot
qqnorm(sample$count)
qqline(app_data$Joule_calculated, col = "red")
qqline(sample$count, col = "red")
filtered_data
# qqplot
qqnorm(filtered_data)
qqline(filtered_data, col = "red")
